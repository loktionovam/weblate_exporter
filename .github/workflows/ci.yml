name: weblate prometheus exporter

on: [pull_request, push, workflow_dispatch]

jobs:
  build-apps:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.10.0"]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    - name: Test weblate exporter application
      run: |
        make test-apps
    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml

  build-images:
    runs-on: ubuntu-20.04
    name: Build weblate exporter image
    needs: [build-apps]
    env:
      WEBLATE_EXPORTER_IMAGE_NAME: loktionovam/weblate_exporter
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
      - name: Build and test weblate exporter image
        run: |
          make build-images
          python -m pip install --upgrade pip
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
          make test-images
      - name: Log into registry
        if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Push image
        if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/v')
        run: |
          make push-images

  build-charts:
    runs-on: ubuntu-20.04
    name: Build weblate-exporter helm chart
    needs: [ build-images ]
    env:
      WEBLATE_EXPORTER_IMAGE_NAME: loktionovam/weblate_exporter

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - name: Prepare helm release
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          make build-charts

      - name: Run chart-releaser
        if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/v')
        uses: loktionovam/chart-releaser-action@v1.2.1-1
        with:
          charts_dir: helm/charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
